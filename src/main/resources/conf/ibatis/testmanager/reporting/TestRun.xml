<?xml version="1.0" encoding="UTF-8" ?>
<!--
  TestManager - test tracking and management system.
  Copyright (C) 2012  Istvan Pamer

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>

    <select id="getTestRunMessageIdNullComment" parameterClass="testmanager.reporting.dao.dto.TestRunDto" resultClass="int">
        SELECT MessageId
        FROM TEST_RUN_MESSAGE
        WHERE ErrorMessage=#errorMessage# AND Comment is NULL
    </select>

    <select id="getTestRunDataId" parameterClass="testmanager.reporting.dao.dto.TestRunDto" resultClass="int">
        SELECT Id
        FROM TEST_RUN_DATA
        WHERE SetName=#setName# AND SetDate=#setStartDate# AND TestName=#testName# AND ParamName=#paramName#
    </select>

    <select id="getCommentForTestRunData" parameterClass="testmanager.reporting.dao.dto.TestRunDto" resultClass="String">
        SELECT Comment
        FROM TEST_RUN_DATA
        JOIN TEST_RUN_MESSAGE
        ON TEST_RUN_DATA.TestRunMessageId = TEST_RUN_MESSAGE.MessageId
        WHERE SetName=#setName# AND SetDate=#setStartDate# AND TestName=#testName# AND ParamName=#paramName#
    </select>

    <select id="getCommentCount" parameterClass="testmanager.reporting.dao.dto.TestRunDto" resultClass="int">
        SELECT count(*)
        FROM TEST_RUN_DATA
        JOIN TEST_RUN_MESSAGE
        ON TEST_RUN_DATA.TestRunMessageId = TEST_RUN_MESSAGE.MessageId
        WHERE ErrorMessage=#errorMessage# AND Comment=#errorComment# AND Type=#errorType#
    </select>

    <select id="getMessageReferenceCount" parameterClass="int" resultClass="int">
        SELECT count(*)
        FROM TEST_RUN_DATA
        WHERE TestRunMessageId=#value#
    </select>

    <select id="getMessageIdForTestRunData" parameterClass="testmanager.reporting.dao.dto.TestRunDto" resultClass="int">
        SELECT TestRunMessageId
        FROM TEST_RUN_DATA
        WHERE SetName=#setName# AND SetDate=#setStartDate# AND TestName=#testName# AND ParamName=#paramName#
    </select>


    <insert id="insertTestRunMessage" parameterClass="testmanager.reporting.dao.dto.TestRunDto">
        INSERT INTO TEST_RUN_MESSAGE (ErrorMessage, Comment, Type)
        VALUES (#errorMessage#, #errorComment#, #errorType#);
        <selectKey resultClass="int">
            SELECT last_insert_id()
        </selectKey>
    </insert>

    <insert id="insertTestRunData" parameterClass="testmanager.reporting.dao.dto.TestRunDto">
        INSERT INTO TEST_RUN_DATA (SetName, SetDate, TestName, ParamName, TestRunMessageId, StartDate, StopDate, ResultState)
        VALUES (#setName#, #setStartDate#, #testName#, #paramName#, #errorMessageId#, #startDate#, #stopDate#, #state#);
        <selectKey keyProperty="testRunId" resultClass="int">
            SELECT last_insert_id()
        </selectKey>
    </insert>

    <insert id="insertTestRunParams" parameterClass="testmanager.reporting.dao.dto.TestRunDto">
        INSERT INTO TEST_RUN_PARAMS (TestRunId, ParamKey, ParamValue)
        VALUES
        <iterate property="params" conjunction=",">
            (#testRunId#, #params[].left#, #params[].right#)
        </iterate>
    </insert>

    <insert id="insertTestRunEnv" parameterClass="testmanager.reporting.dao.dto.TestRunDto">
        INSERT INTO TEST_RUN_ENVIRONMENT (TestRunId, EnvKey, EnvValue)
        VALUES
        <iterate property="environment" conjunction=",">
            (#testRunId#, #environment[].left#, #environment[].right#)
        </iterate>
    </insert>

    <insert id="insertTestRunCheckPoints" parameterClass="testmanager.reporting.dao.dto.TestRunDto">
        INSERT INTO TEST_RUN_CHECKPOINTS (TestRunId, Message, MainType, SubType, ResultState)
        VALUES
        <iterate property="checkPoints" conjunction=",">
            (#testRunId#, #checkPoints[].message#, #checkPoints[].mainType#, #checkPoints[].subType#, #checkPoints[].state#)
        </iterate>
    </insert>
    <insert id="insertTestRunLabels" parameterClass="testmanager.reporting.dao.dto.TestRunDto">
        INSERT INTO TEST_RUN_LABELS (testRunId, label)
        VALUES
        <iterate property="labels" conjunction=",">
            (#testRunId#, #labels[].label#)
        </iterate>
    </insert>


    <update id="updateTestRunDataMessageId" parameterClass="testmanager.reporting.dao.dto.TestRunDto">
        UPDATE TEST_RUN_DATA
        SET TestRunMessageId = #errorMessageId#
        WHERE SetName=#setName# AND SetDate=#setStartDate# AND TestName=#testName# AND ParamName=#paramName#
    </update>

    <update id="updateTestRunMessageComment" parameterClass="testmanager.reporting.dao.dto.TestRunDto">
        UPDATE TEST_RUN_MESSAGE
        SET Comment = #errorComment#, Type = #errorType#
        WHERE MessageId=#errorMessageId#
    </update>


    <resultMap id="testRunDto" class="testmanager.reporting.dao.dto.TestRunDto">
        <result property="testRunId" column="Id" />
        <result property="setName" column="SetName" />
        <result property="setStartDate" column="SetDate" />
        <result property="testName" column="TestName" />
        <result property="paramName" column="ParamName" />
        <result property="errorMessage" column="ErrorMessage" />
        <result property="errorType" column="Type" />
        <result property="errorComment" column="Comment" />
        <result property="startDate" column="StartDate" />
        <result property="stopDate" column="StopDate" />
        <result property="state" column="ResultState" />
    </resultMap>

    <select id="getTestRunDataListFromDate" parameterClass="java.util.Date" resultMap="testRunDto">
        SELECT Id, SetName, SetDate, TestName, ParamName, ErrorMessage, Type, Comment, StartDate, StopDate, ResultState
        FROM TEST_RUN_DATA
        LEFT JOIN TEST_RUN_MESSAGE
        ON TEST_RUN_DATA.TestRunMessageId = TEST_RUN_MESSAGE.MessageId
        WHERE SetDate <![CDATA[ >= ]]> #value#
        ORDER BY Id
    </select>

    <resultMap id="pairDtoParams" class="testmanager.reporting.dao.dto.PairDto">
        <result property="id" column="TestRunId" />
        <result property="left" column="ParamKey" />
        <result property="right" column="ParamValue" />
    </resultMap>

    <resultMap id="pairDtoEnv" class="testmanager.reporting.dao.dto.PairDto">
        <result property="id" column="TestRunId" />
        <result property="left" column="EnvKey" />
        <result property="right" column="EnvValue" />
    </resultMap>

    <resultMap id="checkPointDto" class="testmanager.reporting.dao.dto.CheckPointDto">
        <result property="id" column="TestRunId" />
        <result property="message" column="Message" />
        <result property="mainType" column="MainType" />
        <result property="subType" column="SubType" />
        <result property="state" column="ResultState" />
    </resultMap>

    <select id="getTestRunParamsForId" parameterClass="java.util.Date" resultMap="pairDtoParams">
        SELECT TestRunId, ParamKey, ParamValue
        FROM TEST_RUN_PARAMS
        JOIN TEST_RUN_DATA
        ON TEST_RUN_DATA.Id = TEST_RUN_PARAMS.TestRunId
        WHERE SetDate <![CDATA[ >= ]]> #value#
        ORDER BY TestRunId
    </select>

    <select id="getTestRunEnvForId" parameterClass="java.util.Date" resultMap="pairDtoEnv">
        SELECT TestRunId, EnvKey, EnvValue
        FROM TEST_RUN_ENVIRONMENT
        JOIN TEST_RUN_DATA
        ON TEST_RUN_DATA.Id = TEST_RUN_ENVIRONMENT.TestRunId
        WHERE SetDate <![CDATA[ >= ]]> #value#
        ORDER BY TestRunId
    </select>
    
    <select id="getTestRunLabelsForId" parameterClass="java.util.Date" resultClass="testmanager.reporting.dao.dto.LabelDto">
        SELECT testRunId, label
        FROM TEST_RUN_LABELS
        JOIN TEST_RUN_DATA
        ON TEST_RUN_DATA.Id = TEST_RUN_LABELS.TestRunId
        WHERE SetDate <![CDATA[ >= ]]> #value#
        ORDER BY TestRunId
    </select>

    <select id="getTestRunCheckPointsForId" parameterClass="java.util.Date" resultMap="checkPointDto">
        SELECT TestRunId, Message, MainType, SubType, TEST_RUN_CHECKPOINTS.ResultState
        FROM TEST_RUN_CHECKPOINTS
        JOIN TEST_RUN_DATA
        ON TEST_RUN_DATA.Id = TEST_RUN_CHECKPOINTS.TestRunId
        WHERE SetDate <![CDATA[ >= ]]> #value#
        ORDER BY TestRunId
    </select>

    <!-- for delete -->
    <select id="getSetRunIds" parameterClass="testmanager.reporting.dao.dto.TestRunDto" resultClass="int">
        SELECT Id
        FROM TEST_RUN_DATA
        WHERE SetName=#setName# AND SetDate=#setStartDate#
    </select>

    <delete id="deleteSetRun" parameterClass="testmanager.reporting.dao.dto.TestRunDto">
        DELETE
        FROM TEST_RUN_DATA
        WHERE SetName=#setName# AND SetDate=#setStartDate#
    </delete>

    <delete id="deleteSetRunParams" parameterClass="java.util.List">
        DELETE
        FROM TEST_RUN_PARAMS
        WHERE TestRunId IN
        <iterate open="(" close=")" conjunction=",">
           #[]#
        </iterate>
    </delete>

    <delete id="deleteSetRunEnv" parameterClass="java.util.List">
        DELETE
        FROM TEST_RUN_ENVIRONMENT
        WHERE TestRunId IN
        <iterate open="(" close=")" conjunction=",">
           #[]#
        </iterate>
    </delete>

    <delete id="deleteSetRunCheckPoints" parameterClass="java.util.List">
        DELETE
        FROM TEST_RUN_CHECKPOINTS
        WHERE TestRunId IN
        <iterate open="(" close=")" conjunction=",">
           #[]#
        </iterate>
    </delete>

    <!-- these are the same with different parameter class -->
    <select id="getErrorCommentId" parameterClass="testmanager.reporting.dao.dto.TestRunDto" resultClass="int">
        SELECT MessageId
        FROM TEST_RUN_MESSAGE
        WHERE ErrorMessage=#errorMessage# AND Comment=#errorComment# AND Type=#errorType#
    </select>
    <select id="getErrorCommentIds" parameterClass="testmanager.reporting.domain.reporting.ErrorComment" resultClass="int">
        SELECT MessageId
        FROM TEST_RUN_MESSAGE
        WHERE ErrorMessage=#errorMessage# AND Comment=#comment# AND Type=#type#
    </select>

    <update id="clearCommentForTestRun" parameterClass="int">
        UPDATE TEST_RUN_DATA
        SET TestRunMessageId = NULL
        WHERE TestRunMessageId=#value#
    </update>

    <delete id="deleteErrorComment" parameterClass="int">
        DELETE
        FROM TEST_RUN_MESSAGE
        WHERE MessageId=#value#
    </delete>

    <!-- Delete all unused test run message -->
    <!-- MYSQL bug: "Currently, you cannot delete from a table and select from the same table in a sub query." -->
    <delete id="cleanTestRunMessage" parameterClass="java.util.List">
        DELETE
        FROM TEST_RUN_MESSAGE
        WHERE MessageId IN
        <iterate open="(" close=")" conjunction=",">
           #[]#
        </iterate>
    </delete>
    <select id="selectCleanTestRunMessage" resultClass="int">
            SELECT MessageId
            FROM TEST_RUN_MESSAGE LEFT JOIN TEST_RUN_DATA
            ON TEST_RUN_DATA.TestRunMessageId = TEST_RUN_MESSAGE.MessageId
            WHERE TEST_RUN_DATA.TestRunMessageId IS NULL
    </select>

    <!-- Delete data older then the given date -->
    <delete id="cleanTestRunDataOlderThen" parameterClass="java.util.Date">
        DELETE
        FROM TEST_RUN_DATA
        WHERE SetDate <![CDATA[ <= ]]> #value#
    </delete>
    <delete id="cleanTestRunParamsOlderThen" parameterClass="java.util.Date">
        DELETE
        FROM TEST_RUN_PARAMS
        WHERE TestRunId IN (
            SELECT Id
            FROM  TEST_RUN_DATA
            WHERE SetDate <![CDATA[ <= ]]> #value#
        )
    </delete>
    <delete id="cleanTestRunEnvOlderThen" parameterClass="java.util.Date">
        DELETE
        FROM TEST_RUN_ENVIRONMENT
        WHERE TestRunId IN (
            SELECT Id
            FROM  TEST_RUN_DATA
            WHERE SetDate <![CDATA[ <= ]]> #value#
        )
    </delete>
    <delete id="cleanTestRunCheckPointsOlderThen" parameterClass="java.util.Date">
        DELETE
        FROM TEST_RUN_CHECKPOINTS
        WHERE TestRunId IN (
            SELECT Id
            FROM  TEST_RUN_DATA
            WHERE SetDate <![CDATA[ <= ]]> #value#
        )
    </delete>

</sqlMap>
